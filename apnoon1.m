function [dtsunrise, dtnoon, dtsunset, tzone] = apnoon(yyyy,MM,dd,lat,lon)% APNOON1 -- COMPUTE APPARENT NOON GIVEN THE DATA AND POSITION%    [dtsunrise, dtnoon, dtsunset, tzone] = apnoon(yyyy,MM,dd,lat,lon);% TEST version using Ephem%=========================================================================% compute exact time of sunrise, noon, and sunset anywhere on Earth%%input% yyyy,MM,dd = year, month, day% lat = latitude, +/-90 degrees% lon = longitude, +/- 180 degrees, East = +%% This routine uses the SolarRadiance() function.  It accounts for the % radius of the solar disk (0.53 deg) and the astronomical mean refraction% of 34'.  It has been tested against the JPL epheremeris generator% ssd.jpl.nasa.gov/cgi-bin/eph and agrees generally to less than one minute% in times and about 0.1 deg in azimuth or elevation.%% functions used: SolarRadiance(), dt2jdf(), %see file G4032/A%reynolds 981118%==========================================================================%TEST% clear% lat = 40.870833;% lon = -72.616667;% yyyy = 1996;% MM = 6;% dd = 26;if nargin == 0	[yyyy,MM,dd,hh,mm,ss] = datevec(now);endif nargin == 0 | nargin == 3	k = menu('Location','BN:','Yaphank','Manus','Nauru', 'Enter');	switch k		case 1, lon = -72.616667; lat = 40.870833; 			fprintf('Solar times for BNL (%.5f, %.5f)\n', lat, lon);		case 2, lon = -72.9833; lat = 40.8333;			fprintf('Solar times for Yaphank (%.5f, %.5f)\n', lat, lon);		case 3, lon = 147.425; lat = 2.060;			fprintf('Solar times for Manus Island (%.5f, %.5f)\n', lat, lon);		case 4, lon = 166.916; lat = -0.521;			fprintf('Solar times for Nauru Island (%.5f, %.5f)\n', lat, lon);		case 5			fprintf('Enter desired position: ');			lat = input('Latitude (decimal degrees): ');			lon = input('Longitude: ');	endend% THIS JULIAN DAYjd = datenum(yyyy,MM,dd) - datenum(yyyy,1,1) + 1;% CURRENT TIME ZONE - in NY tzone = tzone = fix((abs(lon) + 7.5) ./ 15) .* sign(lon);%fprintf('Time zone = %.3f hours\n',tzone);% compute the local span of timedt1 = datenum(yyyy,MM,dd) + (3 - tzone)/24; % utc <->well  before dawndt2 = dt1 + 20/24;							% utc <-> well after sunsetdt = [dt1:1/1440:dt2]';[yr,jdf] = dt2jdf(dt);jd = fix(jdf);								% utc jd integerhrf = rem(jdf,1) * 24;						% utc hour (float)% compute the solar azimuth and elevation%[a,e] = sunae(lat,lon,yr,jd,hrf);%[sw,z] = solarradiance(lat, lon, jd, hrf);  % minnett az, elev[az, z, z0] = ephem(lat, lon, dt);%[y,M,d,h,m,s] = datevec(dt);%hrf = h + m/60 + s/3600;%[sh,z,a] = ephems(lat,lon,y,M,d,hrf,0);e = 90 - z;% find noonlen =  length(dt);ix = find(e == max(e));dtnoon = dt(ix);%=========================% parameters for sunrise and sunset% see "glossary of meteorology" and also% "Physical meteorology", Johnson, 1954%see also JPL ephemeris at ssd.jpl.nasa.gov/cgi-bin/eph%==========================e_disk = 1919/3600;   % the apparent solar disk diameter is ~ 34 minutes of arc.e_refrac = 34/60;  % mean astronomical refraction% find sunrise%dtsunrise = interp1(e(1:ix),dt(1:ix),-e_refrac -e_disk/2);dtsunrise = interp1(e(1:ix),dt(1:ix),-e_disk/2); % ephem considers refrac[yrr,jdfr] = dt2jdf(dtsunrise);jdr = fix(jdfr);								% utc jd integerhrfr = rem(jdfr,1) * 24;						% utc hour (float)%[arise,erise] = sunae(lat,lon,yrr,jdr,hrfr);%[sw,z, arise] = solarradiance(lat, lon, jdr, hrfr);  % minnett az, elev[az, z, ze0] = ephem(lat, lon, dtsunrise);%[sh,z,a] = ephems(lat,lon,yrr,M,d,hrf,0);erise = 90-z;arise = az;% sunset%dtsunset = interp1(e(ix:len), dt(ix:len), -e_refrac -e_disk/2);dtsunset = interp1(e(ix:len), dt(ix:len), -e_disk/2);  % ephem considers refraction[yrs,jdfs] = dt2jdf(dtsunset);jds = fix(jdfs);								% utc jd integerhrfs = rem(jdfs,1) * 24;						% utc hour (float)%[arise,erise] = sunae(lat,lon,yrr,jdr,hrfr);%[sw,z, aset] = solarradiance(lat, lon, jds, hrfs);  % minnett az, elev[az, z, ze0] = ephem(lat, lon, dtsunset);%[sh,z,a] = ephems(lat,lon,yrr,M,d,hrf,0);eset = 90-z;aset = az;% fine tune for noondt1 = dtnoon - .1/1440;dt2 = dtnoon + .1/1440;dt = [dt1:1/86400:dt2]';[yr,jdf] = dt2jdf(dt);jd = fix(jdf);								% utc jd integerhrf = rem(jdf,1) * 24;						% utc hour (float)%[a,e] = sunae(lat,lon,yr, jd, hrf);%[s,z,a] = solarradiance(lat,lon,jd,hrf);[az, z, ze0] = ephem(lat, lon, dt);e = 90-z;ix = find(e == max(e));dtnoon = dt(ix);enoon = e(ix);anoon = az(ix);if nargin == 0 | nargin == 3	fprintf('Apnoon: refraction = 34'', observer height = 0 m\n');	fprintf('Sun rise (upper limb)    = %s LST, az = %.1f,  el = %.1f \n',...		datestr(dtsunrise +tzone/24),arise,erise);	fprintf('Solar noon (disk center) = %s, az = %.1f,  el = %.1f\n',...		datestr(dtnoon+ tzone/24), anoon, enoon);	fprintf('Sun set (upper limb)     = %s, az = %.1f,  el = %.1f \n',...		datestr(dtsunset + tzone/24),aset,eset);endreturn