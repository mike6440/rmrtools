function [dtsunrise, dtnoon, dtsunset, tzone] = apnoon_ship(yyyy,jd,dt,lat,lon)% APNOON -- COMPUTE APPARENT NOON GIVEN THE DATE AND POSITION%    [dtsunrise, dtnoon, dtsunset, tzone] = apnoon_ship(yyyy,jd,dt,lat,lon);%=========================================================================% compute exact time of sunrise, noon, and sunset anywhere on Earth% for a ship moving throughout the day%%input% yyyy,jd = year, integer julian day  -- Nz x 1 this is the UTC day on the ship.%           where Nz is an array of days.% dt = time series time base -- Nx1 series, where N is the nav timeseries .% lat = latitude, +/-90 degrees -- Nx1 time series% lon = longitude, +/- 180 degrees, East = +  -- Nx1 time series%%output% dtsunrise=approximate time of sunrise based on the ship trackline.% dtnoon = ditto for noon.% dtsunset = ditto for sunset.% tzone = time zone at noon.%%% This routine uses the SolRad() function.  It accounts for the % radius of the solar disk (0.53 deg) and the astronomical mean refraction% of 34'.  It has been tested against the JPL epheremeris generator% ssd.jpl.nasa.gov/cgi-bin/eph and agrees generally to less than one minute% in times and about 0.1 deg in azimuth or elevation.%% BECAUSE THE SHIP IS MOVING, %  first pass: find position at noon and compute dtsunrise, dtnoon, and dtsunset.%  second pass: look at ship positions at dtsunrise and dtsunset and compute revised%                values of dtsunrise and dtsunset for the locations.% toolbox functions used: ephem dt2jdf jd2ymdhms apnoon%see file G4032/A%reynolds 001026% 010822 - returns NaN if time is missing%==========================================================================%TEST% clear% global drive expname% [t1,t2] = getcruisetimes;% t2 = t2 - 2/1440;% [tlat,lat] = getlevel2(drive,expname,'lat',t1,t2);% [dt,lat] = filltimeSeries(tlat,lat);% [tlon,lon] = getlevel2(drive,expname,'lon',t1,t2);% [dt,lon] = filltimeSeries(tlon,lon);% yyyy = 2001;  jd = 230;% END TESTdtsunrise = [];dtnoon = [];dtsunset = [];tzone = [];njd = length(jd);fprintf('apnoon_ship process %d days.\n', njd);ijg=1;for ij=1:njd,	jdy=jd(ij); ydy=yyyy(ij);	%fprintf('Day %d\n',jdy);		% FIRST PASS -- DETERMINE THE SHIP POSITION AT 0 UTC OR AT THE BEGINNING OF THE SERIES	% a 2-hr time window around the jdy start.	t1 = jdf2dt(ydy,jdy-1/24);	if t1 < dt(1),		t1 = dt(1);	end	t2 = t1 + 2/24;  	%fprintf('%s --- %s\n', dtstr(t1), dtstr(t2));	ix = find(dt >= t1 & dt < t2);	if length(ix) > 0		lat0 = mean(ScrubSeries(lat(ix))); % mean of lats in this window		lon0 = mean(ScrubSeries(lon(ix))); % mean of lats in this window		if isnan(lat0) | isnan(lon0)		else			[y,M,d] = Jd2ymdhms(ydy,jdy);  % getting ready to use apnoon.m			[tr0,tn0,ts0, tz0] = apnoon(y,M,d,lat0,lon0);						% SECOND PASS -- RECOMPUTE SHIP POSITIONS					% SUNRISE			t1 = tr0-10/1440;  t2 = t1 + 20/1440;  % a 20-min window around sunrise			ix = find(dt >= t1 & dt < t2);			if length(ix) == 0				%fprintf('SUNRISE SECOND PASS: NO DATA, use first pass value\n');				latr = lat0;  lonr = lon0;			else				latr = mean(ScrubSeries(lat(ix))); % mean of lats in this window				lonr = mean(ScrubSeries(lon(ix))); % mean of lats in this window				if isnan(latr) | isnan(lonr)					%fprintf('SUNRISE SECOND PASS: NO LAT OR LON IN SUNRISE WINDOW, use first pass values\n');					latr = lat0;  lonr = lon0;				end			end			dtsunrise=[dtsunrise; apnoon(y,M,d,latr,lonr)];					% SUNSET			t1 = ts0-10/1440;  t2 = t1 + 20/1440;  % a 20-min window around sunrise			ix = find(dt >= t1 & dt < t2);			if length(ix) == 0				%fprintf('SUNSET SECOND PASS: NO DATA, use first pass value\n');				lats = lat0;  lons = lon0;			else				lats = mean(ScrubSeries(lat(ix))); % mean of lats in this window				lons = mean(ScrubSeries(lon(ix))); % mean of lats in this window				if isnan(lats) | isnan(lons)					%fprintf('SUNSET SECOND PASS: NO LAT OR LON IN SUNSET WINDOW, use first pass values\n');					lats = lat0;  lons = lon0;				end			end			[dum,dum,xx] = apnoon(y,M,d,lats,lons);			dtsunset=[dtsunset; xx];				% SOLAR NOON			t1 = mean([dtsunrise(ijg), dtsunset(ijg)])-10/1440;  t2 = t1 + 20/1440;  % a 20-min window around sunrise			ix = find(dt >= t1 & dt < t2);			if length(ix) == 0				%fprintf('NOON SECOND PASS: NO SUNSET TIMES - use first pass values\n');				latn = lat0;  lonn = lon0;			else				latn = mean(ScrubSeries(lat(ix))); % mean of lats in this window				lonn = mean(ScrubSeries(lon(ix))); % mean of lats in this window				if isnan(latn) | isnan(lonn)					%fprintf('NOON SECOND PASS: NO LAT OR LON IN NOON WINDOW - use first pass values\n');					latn = lat0;  lonn = lon0;				end			end			[dum,xx,dum,xy] = apnoon(y,M,d,latn,lonn);			dtnoon=[dtnoon; xx];			tzone=[tzone; xy];			ijg=ijg+1; % good calculations		end	endendreturn