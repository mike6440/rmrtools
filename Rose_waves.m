function Rose_waves(ws,wd, fg, ax, fontname, title1, roselimits)%function Rose_waves(ws,wd, fg, ax, fontname, title1) -- plot a wind rose for given speed and direction% three speed bins, <1, 1-5, >5% INPUT% ws = wind speed% wd = wind direction% fg = figure handle% ax = axis handle% fontname = the name of the desired font% title1 = string for a simple title% limits = 1x2, defines the three scale regions. Default = [3,7]% v104 060621 rmr -- enter into rmrtools and clean up.% v105 060625 rmr -- add title to the argument list.VERSION = 'v1';fprintf('Rose_waves version %s\n', VERSION);if nargin <= 6,	LIMS = [1, 5];else	LIMS = roselimits;endd2r = pi / 180;%% FILL THE BINS% ORIGINAL SERIES LENGTHnpts = length(wd);% SET UP THE BINSx1 = [0; 11.25; [33.75:22.5:348.75]'];x2 = [[11.25:22.5:360]'; 360];% HOW MANY BAD POINTS. OR MISSING, OR NANix = find(isnan(wd));Nbad = length(ix);pcntbad = 100 * Nbad / npts;fprintf('PERCENT BAD = %.1f\n',pcntbad);% HOW MANY VRB DIRECTIONS, COUNT THEN SET TO NAN	ix = find(wd == -998);Nvrb=0;if length(ix) > 0	Nvrb = length(ix);	wd(ix)=NaN;endpcntvrb = 100 * Nvrb / npts;fprintf('PERCENT VRB = %.1f\n',pcntvrb);% FIND ALL CALM CONDITIONSix = find( ws == 0);Ncalm = 0;if length(ix) > 0,    Ncalm = length(ix);	wd(ix)=NaN;endpcntcalm = 100 * Ncalm / npts;fprintf('PERCENT CALM = %.1f\n',pcntcalm);% MAKE A VECTOR WITH ALL BAD DIRECTIONS REMOVEDws1 = ws;  [v, ix] = scrubseries(wd,[0;360]);if ~isnan(ix(1)),	ws1(ix) = []; end% NEW CLEANED LENGTHnpts = length(v);% FIND NUMBER OF DIRECTIONS IN EACH BIN% BREAK INTO SPEED SEGMENTSnsx = [];for ibin = 1:17,	ix = find( v >= x1(ibin) & v < x2(ibin) );  % all points in this direction	if length(ix) > 1		vsx = ws1(ix);  % speeds <-> the directions		nsx1 = length( find( vsx < LIMS(1) ) );		nsx2 = length( find( vsx >= LIMS(1) & vsx < LIMS(2) ) );		nsx3 = length( find( vsx >= LIMS(2) ) );		nsx = [nsx; nsx1 nsx2 nsx3];	else		nsx = [nsx; 0 0 0];	endend% COMBINE BINS 1 AND 17 INTO NORTH BINnsx(1,1) = nsx(1,1) + nsx(17,1);nsx(1,2) = nsx(1,2) + nsx(17,2);nsx(1,3) = nsx(1,3) + nsx(17,3);nsx(17,:) = [];% CONVERT TO PERCENTAGES%total = length(wd);  % 030320 - percent of all data, not just good data.  sum(in);total = Nvrb+Ncalm+npts;  % v104 -- percents are of real data only.nsx = nsx ./ total .* 100;% theta IS THE BIN MEDIAN DIRECTION IN DEGREEStheta = [0:22.5:359]';%%  ---------------  PLOTTING THE WIND ROSE ------------------------% % SET UP THE PLOTTING AREA% THE PLOTTING AREA HAS BEEN DEFINED: fg, ax% COMPUTE CIRCLES AT 5, 10, 15 % PERCENTAGESinmax = max(sum(nsx'));ringmax = max(ceil(inmax/3)*3,6);ringval = round([ringmax/3; 2*ringmax/3; ringmax]);  fprintf('Ring values = %.1f, %.1f, %.1f\n', ringval(1), ringval(2), ringval(3));% GRAPH SCALE SIZEaxscale = .6 * max(ringval); %max(sum(nsx'));pcnt_circles = ringval;rd = [0:.1:360]' .* d2r;for i = 1:length(pcnt_circles),	radius = pcnt_circles(i);	xx = radius/axscale .* sin(rd);	yy = radius/axscale .* cos(rd);	plot(xx,yy,'-k');	hold onendset(gca, 'color',[1 1 1], 'xcolor','w',...	'ycolor','w');x = max(pcnt_circles) * 1.1/axscale;plot([0,0],[-x,x],'-k');plot([-x,x],[0,0],'-k');% PLOT EACH BINfor ibn = 1: length( nsx(:,1) ),	arc = [theta(ibn)-11.25:0.1:theta(ibn)+11.25]';	arcr = [theta(ibn)+11.25 : -0.1 : theta(ibn)-11.25]';	% LOW WINDS	arc1 = nsx(ibn,1) .* [sin(arc .* d2r), cos(arc .* d2r)];	pb = [0,0; arc1; 0,0]/axscale;	ln = fill(pb(:,1),pb(:,2),'r');	set(ln,'linewidth',1);	%MEDIUM WIND SPEEDS	arc1 = nsx(ibn,1) .* [sin(arc .* d2r), cos(arc .* d2r)];    % forward	arc2 = (nsx(ibn,1) + nsx(ibn,2)) .* [sin(arcr .* d2r), cos(arcr .* d2r)];  % backward	pb = [ arc1; arc2; arc1(1,:) ]/axscale;	ln = plot(pb(:,1),pb(:,2),'r');	set(ln,'linewidth',1);	% HIGH WINDS	arc1 = sum(nsx(ibn,1:2)) .* [sin(arc .* d2r), cos(arc .* d2r)];  % forward	arc2 = sum( nsx(ibn,1:3)) .* [sin(arcr .* d2r), cos(arcr .* d2r)]; % backward	pb = [ arc1; arc2; arc1(1,:) ]/axscale;	ln = fill(pb(:,1),pb(:,2),'r');	set(ln,'linewidth',1);	end% LABEL CIRCLESa1 = pcnt_circles(1)*1.1 .* sin(170 .* d2r)/axscale;a2 = pcnt_circles(1)*1.1 .* cos(170 .* d2r)/axscale;str = sprintf('%d%%',pcnt_circles(1));tx = text(a1,a2, str);set(tx,'horizontalalignment','left','verticalalignment','top',...	'fontname', fontname, 'fontsize',12,'fontweight','bold');a1 = pcnt_circles(2)*1.1 .* sin(170 .* d2r)/axscale;a2 = pcnt_circles(2)*1.1 .* cos(170 .* d2r)/axscale;str = sprintf('%d%%',pcnt_circles(2));tx = text(a1,a2,str);set(tx,'horizontalalignment','left','verticalalignment','top',...	'fontname', fontname, 'fontsize',12,'fontweight','bold');a1 = pcnt_circles(3)*1.1 .* sin(170 .* d2r)/axscale;a2 = pcnt_circles(3)*1.1 .* cos(170 .* d2r)/axscale;str = sprintf('%d%%',pcnt_circles(3));tx = text(a1,a2,str);set(tx,'horizontalalignment','left','verticalalignment','middle',...	'fontname', fontname, 'fontsize',12,'fontweight','bold');tx = text(0,0,title1);set(tx,'units','normalized','position',[.2,.95],...	'horizontalalignment','center',...	'fontname', fontname,'fontsize',10,'fontweight','bold',...	'backgroundcolor', 'w');str = sprintf('N = %d', length(ws));tx = text(0,0,str);set(tx,'units','normalized','position',[.2,.9],...	'horizontalalignment','center',...	'fontname','fontname','fontsize',10,'fontweight','bold');axis('square')set(gca,'xticklabel',[]);set(gca,'xtick',[]);set(gca,'yticklabel',[]);set(gca,'ytick',[]);%get(gca)return;