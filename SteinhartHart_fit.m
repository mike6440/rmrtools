function [beta] = SteinhartHart_fit(t,r,tlim)%function [beta] = SteinhartHart_fit(t,r,tlim)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%input% t = calibrated temperature vector, degC% r = measured resistance, ohms% tlim (optional) the temperature limits for the fit%% if nargin = 0 ==> use standard table%output% beta is the 3x1 calibration vector where temp is computed by%     xt = beta(1) + beta(2)*xr + beta(3)*xr^3%   where%		xr = log(1/R)%		T = 1/xt - 273.15%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%nargs = nargin;fprintf('nargin = %d\n',nargs);% test % ysi 46041if nargs == 0,	a = [0	29490 	1	28150 	2	26890 	3	25690 	4	24550 	5	23460 	6	22430 	7	21450 	8	20520 	9	19630 	10	18790 	11	17980 	12	17220 	13	16490 	14	15790 	15	15130 	16	14500 	17	13900 	18	13330 	19	12790 	20	12260 	21	11770 	22	11290 	23	10840 	24	10410 	25	10000 	26	9605	27	9227	28	8867	29	8523	30	8194	31	7880	32	7579	33	7291	34	7016	35	6752	36	6500	37	6258	38	6026	39	5805	40	5592	];	t = a(:,1); r = a(:,2);	tlim = [0 40];	nargs=2;end% end test%==================================%STEINHART-HART  FIT%%   1/T = a1 + a2 * ln(1/R)  + a3 * ln^3(1/R)%%   beta = (X'x)^-1 (X'y)  linear regression %===================================if nargs == 2,	tlim = [t(1) t(end)];endix = find(t<tlim(1));if length(ix) == 0, tlim(1) = t(1); endix = find(t>tlim(2));if length(ix) > 0, tlim(2) = t(end); endfprintf('Steinhart-Hart Fit for T from %.1f to %.1f\n',tlim(1), tlim(2));ix = find(t>=tlim(1) & t <= tlim(2));t = t(ix);  r = r(ix);xt = 1 ./ (t+273.15);%vx = log(1 ./  Vt);vx = log(r);X = ones(length(vx),1);X(:,2) = vx;X(:,3) = vx .* vx .* vx;beta = (X' * X)^-1 * (X' * xt);%TEST% fitted curvet2 = beta(1) + beta(2) .* vx + beta(3) .* vx .* vx .* vx;T2 = 1 ./ t2 - 273.15;%plot(t, (t-T2)*1000,'-k',t, (t-T2)*1000,'ok','markerfacecolor','k');plot(t, (t-T2)*1000,'ok','markerfacecolor','k');gridset(gca,'fontname','arial','fontweight','bold','fontsize',14)xlabel('NOMINAL TEMPERATURE');ylabel('Tfit - Tnominal (milli-degC');figure(gcf)fprintf('beta = %.6e, %.6e, %.6e\n',beta(1), beta(2), beta(3));% end test% 